@startuml
skinparam sequenceArrowThickness 1
skinparam roundcorner 20
skinparam maxmessagesize 500
/'skinparam sequenceParticipant underline'/

actor nsq as nsq

participant "retail-sales" as sales
participant "trade" as trade

participant "salesman_rank_log" as t1
participant "salesman_achievement_details_log" as t2

nsq -> sales : 1发送订单退款消息

sales -> sales : 1.1 判断消息到达时间(当前系统)是否小于统计截止时间

sales -> t2 : 2根据orderNo查询订单
activate t2
note left
    如果查询不到订单，说明订单支付成功消息延迟
    丢弃
end note

note right
    如果查询到订单
    更新 salesman_rank_log
    state = 9 or state = 0 如果部分退款 state = 0 如果全部退款 state = 9
    查询订单详情 使用订单详情 realPay 和 refundAmount
    real_pay = real_pay - refundAmount
    version = version + 1
end note
return 3返回

sales -> trade : 3查询订单详情 realPay 和退款refundTotal
activate trade
return 4返回 使用 realPay - refundTotal

sales -> t2 : 5更新明细表
activate t2
return 6返回

sales -> t2 : 7聚合 salesman_achievement_details_log 表数据
activate t2
return 8返回 Sum(real_pay)
note left
    Sum(real_pay) = count(real_pay) where rootKdtId = ? and salesmanId = ? and state = 0
end note

sales -> t1 : 7利用聚合数据更新 salesman_rank_log

activate t1
return 8返回

sales --> nsq : 9返回
@enduml